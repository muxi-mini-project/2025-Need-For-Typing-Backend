definitions:
  controllers.VerifyRequest:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
  controllers.VerifyToken:
    properties:
      token:
        type: string
    type: object
  models.Game:
    properties:
      id:
        description: 主键，自动递增
        type: integer
      players:
        items:
          $ref: '#/definitions/models.User'
        type: array
      score:
        description: 关联 TotalScore
        items:
          $ref: '#/definitions/models.TotalScore'
        type: array
      song:
        allOf:
        - $ref: '#/definitions/models.Song'
        description: 关联 Song
      song_id:
        description: 关联 Song 的 ID
        type: integer
      time:
        type: string
      user_id:
        description: 外键，指向 User 表的 ID
        type: integer
    type: object
  models.Song:
    properties:
      file_id:
        description: 文件标识符
        type: string
      id:
        description: 主键
        type: integer
      title:
        description: 歌曲标题
        type: string
    type: object
  models.TotalScore:
    properties:
      game:
        $ref: '#/definitions/models.Game'
      game_id:
        description: 外键，指向 Game 表的 ID
        type: integer
      id:
        description: 主键
        type: integer
      total_score:
        description: 分值
        type: integer
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      email:
        description: 邮箱
        type: string
      email_verified:
        description: 邮箱是否验证
        type: boolean
      games:
        items:
          $ref: '#/definitions/models.Game'
        type: array
      password:
        description: 密码
        type: string
      reset_token:
        type: string
      token_expires_at:
        type: string
      user_id:
        description: id
        type: integer
      username:
        description: 用户名
        type: string
    type: object
info:
  contact: {}
  description: 一个打字游戏
  title: NeedForTyping
  version: "1.0"
paths:
  /api/assets:
    get:
      consumes:
      - application/json
      description: 查询所有素材的信息
      produces:
      - application/json
      responses:
        "200":
          description: 返回所有素材信息
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 查询失败
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取所有素材
      tags:
      - 素材
  /api/assets/update:
    post:
      consumes:
      - application/json
      description: 更新素材列表信息
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 更新失败
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 更新素材列表
      tags:
      - 素材
  /essay:
    get:
      consumes:
      - application/json
      description: 根据传入的 topic 参数，通过 gRPC 流式调用生成文章，并使用 SSE 向前端实时推送生成结果
      parameters:
      - description: 文章主题
        in: query
        name: topic
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE stream of generated essay
          schema:
            type: string
        "500":
          description: 内部服务器错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取生成的文章
      tags:
      - 文章
      - SSE
      - gRPC
  /score:
    post:
      consumes:
      - application/json
      description: 接收 JSON 格式的总分数据并上传到服务器
      parameters:
      - description: 上传的总分信息
        in: body
        name: totalScore
        required: true
        schema:
          $ref: '#/definitions/models.TotalScore'
      produces:
      - application/json
      responses:
        "200":
          description: 返回上传成功的分数ID
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 上传总分
      tags:
      - 分数
  /scores:
    get:
      consumes:
      - application/json
      description: 根据传入的 song_id 查询该歌曲所有的总分记录
      parameters:
      - description: 歌曲ID
        in: query
        name: song_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回总分信息
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取歌曲所有总分信息
      tags:
      - 分数
  /song:
    get:
      consumes:
      - application/json
      description: 根据传入的 song_id 查询歌曲信息并返回文件ID
      parameters:
      - description: 歌曲ID
        in: query
        name: song_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回歌曲的 file_id
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 缺少 song_id 参数
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 歌曲未找到
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取歌曲信息
      tags:
      - 歌曲
  /songs:
    get:
      consumes:
      - application/json
      description: 查询所有歌曲信息
      produces:
      - application/json
      responses:
        "200":
          description: 返回所有歌曲的列表
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取所有歌曲
      tags:
      - 歌曲
  /songs/update:
    post:
      consumes:
      - application/json
      description: 更新歌曲列表信息
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 更新歌曲列表失败
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 更新歌曲列表
      tags:
      - 歌曲
  /upload/token:
    post:
      consumes:
      - application/json
      description: 验证用户令牌并返回上传令牌
      parameters:
      - description: 用户验证令牌
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.VerifyToken'
      produces:
      - application/json
      responses:
        "200":
          description: 返回上传令牌
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求错误或验证失败
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取上传令牌
      tags:
      - 上传
  /user/forget_password:
    get:
      consumes:
      - application/json
      description: 向后端发起忘记密码请求，通过邮箱发送重置密码的链接
      parameters:
      - description: 用户邮箱地址
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 密码重置链接已发送
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 缺少邮箱参数
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 忘记密码
      tags:
      - 用户管理
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录，验证用户名和密码，生成 JWT Token
      parameters:
      - description: 用户登录信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: 返回登录成功消息及 JWT Token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 用户名或密码错误
          schema:
            additionalProperties: true
            type: object
        "403":
          description: 邮箱未验证
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 用户不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 用户登录接口
      tags:
      - 用户管理
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册接口，接收用户信息创建新用户
      parameters:
      - description: 用户注册信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: 用户创建成功
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: 用户已存在
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 用户注册
      tags:
      - 用户管理
  /user/reset_password:
    get:
      consumes:
      - application/json
      description: 提供重置密码的 token、邮箱和新密码，完成密码重置
      parameters:
      - description: 重置密码的 token
        in: query
        name: token
        required: true
        type: string
      - description: 用户邮箱
        in: query
        name: email
        required: true
        type: string
      - description: 新的密码
        in: query
        name: new_password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 密码重置成功
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 缺少参数或无效的 token
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 密码重置失败
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 重置密码
      tags:
      - 用户管理
  /user/send_code:
    get:
      description: 生成并向用户邮箱发送验证码
      parameters:
      - description: 邮箱地址
        in: query
        name: email
        required: true
        type: string
      responses:
        "200":
          description: 验证码发送成功
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 邮箱为空
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 发送失败
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 发送邮箱验证码
      tags:
      - Verification
  /user/verify_code:
    post:
      consumes:
      - application/json
      description: 验证用户提交的验证码是否有效
      parameters:
      - description: 邮箱和验证码
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 验证成功
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求体无效
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 验证码无效或过期
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 验证验证码
      tags:
      - Verification
  /user_scores:
    get:
      consumes:
      - application/json
      description: 根据传入的 user_id 查询该用户所有的最佳分数记录
      parameters:
      - description: 用户ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户最佳分数记录
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 用户未找到
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取用户所有最佳成绩
      tags:
      - 分数
  /ws:
    get:
      description: 建立 WebSocket 连接并处理房间逻辑
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 房间 ID
        in: query
        name: room_id
        type: string
      responses:
        "200":
          description: 返回房间加入信息
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 未授权
          schema:
            type: string
      summary: WebSocket 连接处理
      tags:
      - WebSocket
swagger: "2.0"
