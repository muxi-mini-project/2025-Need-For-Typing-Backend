definitions:
  controllers.VerifyRequest:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
  models.Asset:
    properties:
      file_id:
        description: 文件标识符
        type: string
      id:
        description: 主键
        type: integer
      name:
        description: 资源名称
        type: string
    type: object
  models.Game:
    properties:
      id:
        description: 主键，自动递增
        type: integer
      players:
        items:
          $ref: '#/definitions/models.User'
        type: array
      score:
        description: 外键，指向 TotalScore 表
        items:
          $ref: '#/definitions/models.TotalScore'
        type: array
      song:
        allOf:
        - $ref: '#/definitions/models.Song'
        description: 外键，指向 Song 表
      time:
        type: string
      user_id:
        description: 外键，指向 User 表的 ID
        type: integer
    type: object
  models.Song:
    properties:
      file_id:
        description: 文件标识符
        type: string
      id:
        description: 主键
        type: integer
      title:
        description: 歌曲标题
        type: string
    type: object
  models.TotalScore:
    properties:
      game:
        $ref: '#/definitions/models.Game'
      game_id:
        description: 外键，指向 Game 表的 ID
        type: integer
      id:
        description: 主键
        type: integer
      total_score:
        description: 分值
        type: integer
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      email:
        description: 邮箱
        type: string
      email_verified:
        description: 邮箱是否验证
        type: boolean
      games:
        items:
          $ref: '#/definitions/models.Game'
        type: array
      password:
        description: 密码
        type: string
      user_id:
        description: id
        type: integer
      username:
        description: 用户名
        type: string
    type: object
info:
  contact: {}
  description: 一个打字游戏
  title: NeedForTyping
  version: "1.0"
paths:
  /api/asset:
    get:
      description: 根据 asset_id 查询资产信息
      parameters:
      - description: 资产 ID
        in: query
        name: asset_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 缺少 asset_id
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 资产未找到
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取资产信息
      tags:
      - Asset
    post:
      consumes:
      - application/json
      description: 提交 JSON 格式的资产信息保存到数据库
      parameters:
      - description: 资产信息
        in: body
        name: asset
        required: true
        schema:
          $ref: '#/definitions/models.Asset'
      produces:
      - application/json
      responses:
        "200":
          description: 返回资产 ID
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: 请求体格式错误
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 上传资产信息
      tags:
      - Asset
  /api/score:
    post:
      consumes:
      - application/json
      description: 提交用户总分信息保存到数据库
      parameters:
      - description: 总分信息
        in: body
        name: totalScore
        required: true
        schema:
          $ref: '#/definitions/models.TotalScore'
      produces:
      - application/json
      responses:
        "200":
          description: 返回分数 ID
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: 请求体格式错误
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 上传总分
      tags:
      - Score
  /api/scores:
    get:
      consumes:
      - application/json
      description: 根据歌曲 ID 获取该歌曲的所有分数信息
      parameters:
      - description: 歌曲 ID
        in: query
        name: song_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回分数列表
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: 请求参数错误
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取一首歌的所有总分信息
      tags:
      - Score
  /api/user/login:
    post:
      consumes:
      - application/json
      description: 用户登录，验证用户名和密码，生成 JWT Token
      parameters:
      - description: 用户登录信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: 返回登录成功消息及 JWT Token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 用户名或密码错误
          schema:
            additionalProperties: true
            type: object
        "403":
          description: 邮箱未验证
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 用户不存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 用户登录接口
      tags:
      - 用户管理
  /api/user/register:
    post:
      consumes:
      - application/json
      description: 用户注册，创建新用户并发送验证邮件
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: 返回注册成功消息
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求参数错误
          schema:
            additionalProperties: true
            type: object
        "409":
          description: 用户名或邮箱已存在
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties: true
            type: object
      summary: 用户注册接口
      tags:
      - 用户管理
  /api/user_scores:
    get:
      consumes:
      - application/json
      description: 根据用户 ID 获取其所有游戏中的最佳分数
      parameters:
      - description: 用户 ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户最佳成绩
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 缺少用户 ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 未找到用户
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 获取用户所有最佳成绩
      tags:
      - Score
  /user/send_code:
    get:
      description: 生成并向用户邮箱发送验证码
      parameters:
      - description: 邮箱地址
        in: query
        name: email
        required: true
        type: string
      responses:
        "200":
          description: 验证码发送成功
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 邮箱为空
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 发送失败
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 发送邮箱验证码
      tags:
      - Verification
  /user/verify_code:
    post:
      consumes:
      - application/json
      description: 验证用户提交的验证码是否有效
      parameters:
      - description: 邮箱和验证码
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 验证成功
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求体无效
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 验证码无效或过期
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 验证验证码
      tags:
      - Verification
  /ws:
    get:
      description: 建立 WebSocket 连接并处理房间逻辑
      parameters:
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 房间 ID
        in: query
        name: room_id
        type: string
      responses:
        "200":
          description: 返回房间加入信息
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 未授权
          schema:
            type: string
      summary: WebSocket 连接处理
      tags:
      - WebSocket
swagger: "2.0"
